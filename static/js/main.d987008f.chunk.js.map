{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","reverse","sortField","Default","visibleGoods","state","setState","className","onClick","sortedVisibleGoods","sort","a","b","localeCompare","prevState","Alphabet","type","classNames","length","Length","map","item","ReactDOM","render","document","getElementById"],"mappings":"6KAKKA,E,2FAAAA,K,gBAAAA,E,oBAAAA,E,YAAAA,M,KAYE,IAAMC,EAA4B,CACvC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAA0BC,mBAAgB,CACxCC,SAAS,EACTC,UAAWL,EAASM,QACpBC,aAAa,GAAD,OAAMN,KAHpB,mBAAOO,EAAP,KAAcC,EAAd,KAqDA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QA3BR,WACE,IAAMC,EAAqB,UAAIX,GAC5BY,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAE9BP,EAAMJ,SACRQ,EAAmBR,UAGrBK,GAAS,SAAAQ,GAAS,kCACbA,GADa,IAEhBZ,UAAWL,EAASkB,SACpBX,aAAcK,QAiBVO,KAAK,SACLT,UAAWU,IAAW,SAAU,UAAW,CACzC,WAAYZ,EAAMH,YAAcL,EAASkB,WAJ7C,iCAUA,wBACEP,QArDR,WACE,IAAMC,EAAqB,UAAIX,GAAiBY,MAC9C,SAACC,EAAGC,GAAJ,OAAUD,EAAEO,OAASN,EAAEM,UAGrBb,EAAMJ,SACRQ,EAAmBR,UAGrBK,GAAS,SAAAQ,GAAS,kCACbA,GADa,IAEhBZ,UAAWL,EAASsB,OACpBf,aAAcK,QA0CVO,KAAK,SACLT,UAAWU,IAAW,SAAU,aAAc,CAC5C,WAAYZ,EAAMH,YAAcL,EAASsB,SAJ7C,4BAUA,wBACEX,QAvER,WACEF,GAAS,SAAAQ,GAAS,kCACbA,GADa,IAEhBb,SAAUa,EAAUb,QACpBG,aAAc,YAAIU,EAAUV,cAAcH,gBAoEtCe,KAAK,SACLT,UAAWU,IAAW,SAAU,aAAc,CAC5C,YAA8B,IAAlBZ,EAAMJ,UAJtB,qBAUCI,EAAMH,WAAaG,EAAMJ,QACxB,wBACEO,QA3CV,WACEF,EAAS,CACPL,SAAS,EACTC,UAAWL,EAASM,QACpBC,aAAa,GAAD,OAAMN,MAwCZkB,KAAK,SACLT,UAAU,4BAHZ,mBAOE,QAGN,6BACGF,EAAMD,aAAagB,KAAI,SAAAC,GAAI,OAC1B,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YC/HnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d987008f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nenum SortType {\n  Length = 'length',\n  Alphabet = 'alphabet',\n  Default = '',\n}\n\ntype State = {\n  reverse: boolean;\n  sortField: SortType;\n  visibleGoods: string[];\n};\n\nexport const goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [state, setState] = useState<State>({\n    reverse: false,\n    sortField: SortType.Default,\n    visibleGoods: [...goodsFromServer],\n  });\n\n  function reverseGoods(): void {\n    setState(prevState => ({\n      ...prevState,\n      reverse: !prevState.reverse,\n      visibleGoods: [...prevState.visibleGoods].reverse(),\n    }));\n  }\n\n  function sortByLength(): void {\n    const sortedVisibleGoods = [...goodsFromServer].sort(\n      (a, b) => a.length - b.length,\n    );\n\n    if (state.reverse) {\n      sortedVisibleGoods.reverse();\n    }\n\n    setState(prevState => ({\n      ...prevState,\n      sortField: SortType.Length,\n      visibleGoods: sortedVisibleGoods,\n    }));\n  }\n\n  function sortByAlphabet(): void {\n    const sortedVisibleGoods = [...goodsFromServer]\n      .sort((a, b) => a.localeCompare(b));\n\n    if (state.reverse) {\n      sortedVisibleGoods.reverse();\n    }\n\n    setState(prevState => ({\n      ...prevState,\n      sortField: SortType.Alphabet,\n      visibleGoods: sortedVisibleGoods,\n    }));\n  }\n\n  function resetGoods(): void {\n    setState({\n      reverse: false,\n      sortField: SortType.Default,\n      visibleGoods: [...goodsFromServer],\n    });\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={sortByAlphabet}\n          type=\"button\"\n          className={classNames('button', 'is-info', {\n            'is-light': state.sortField !== SortType.Alphabet,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={sortByLength}\n          type=\"button\"\n          className={classNames('button', 'is-success', {\n            'is-light': state.sortField !== SortType.Length,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={reverseGoods}\n          type=\"button\"\n          className={classNames('button', 'is-warning', {\n            'is-light': state.reverse !== true,\n          })}\n        >\n          Reverse\n        </button>\n\n        {state.sortField || state.reverse ? (\n          <button\n            onClick={resetGoods}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        ) : null}\n      </div>\n\n      <ul>\n        {state.visibleGoods.map(item => (\n          <li key={item} data-cy=\"Good\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}